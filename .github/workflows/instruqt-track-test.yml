# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0
name: hashicorp/field-workshops-consul/instruqt-track-test
on:
  workflow_call:
    inputs:
      working_directory:
        required: true
        type: string
      INSTRUQT_CLI_URI:
        required: true
        type: string
    secrets:
      INSTRUQT_TOKEN:
        required: true
    outputs:
      test_runs:
        description: "Number of runs test took"
        value: ${{ jobs.test-track.outputs.test_runs }}
env:
  # See IL-559 for information about the source of these
  # secrets and variables
  INSTRUQT_TOKEN: ${{ secrets.INSTRUQT_TOKEN }}
jobs:
  test-track:
    runs-on: ubuntu-latest
    outputs:
      test_runs: ${{ steps.instruqt-test.outputs.runs }}
    steps:
    - name: Checkout Source
      id: checkout-source
      uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0
    - name: Get Instruqt CLI
      id: get-instruqt-cli
      run: |-
        curl -Lo instruqt.zip "${{ inputs.INSTRUQT_CLI_URI }}"
        unzip instruqt.zip
        mkdir -p "${HOME}/.local/bin/"
        mv instruqt "${HOME}/.local/bin/"
        chmod +x "${HOME}/.local/bin/instruqt"
        "${HOME}/.local/bin/instruqt" update
        echo "${HOME}/.local/bin" >> "${GITHUB_PATH}"
    - name: Instruqt Test Loop
      id: instruqt-test
      working-directory: ${{ inputs.working_directory }}
      run: |-
        # From GHA docs, "If a configuration variable has not been set,
        # the return value of a context referencing the variable will
        # be an empty string."
        if [ -z "${{ vars.MAX_INSTRUQT_TEST_LOOPS }}" ]; then
          MAX_TEST_LOOPS=4    # Legacy default
        else
          MAX_TEST_LOOPS="${{ vars.MAX_INSTRUQT_TEST_LOOPS }}"
        fi
        n=1
        until [ $n -gt ${MAX_TEST_LOOPS} ]; do
          echo "Test $n"
          instruqt track test --skip-fail-check && break
          n=$(( n + 1 ))
          sleep 60
        done
        if [ $n -gt ${MAX_TEST_LOOPS} ]; then
          # If we get here, it's because n is *one more* than
          # MAX_TEST_LOOPS; decrement it so we report the
          # number of times the test was actually ran
          n=$(( n - 1 ))
          echo "runs=${n}" >> "${GITHUB_OUTPUT}"
          echo "Instruqt track test failed after $n attempts"
          exit 1
        else
          echo "runs=${n}" >> "${GITHUB_OUTPUT}"
          exit 0
        fi
