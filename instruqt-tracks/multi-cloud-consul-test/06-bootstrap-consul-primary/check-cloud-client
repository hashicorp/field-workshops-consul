#!/bin/bash

#creds
vault login -method=userpass username=admin password=admin
export CONSUL_HTTP_TOKEN=$(vault kv get -field master_token kv/consul)

#check the replication token
vault read consul/creds/replication
if [ $? -ne 0 ]
then
  fail-message "Error checking Consul relication acl token"
  exit 1
fi

#check the mgw token
vault read consul/creds/mgw
if [ $? -ne 0 ]
then
  fail-message "Error checking Consul mgw acl token"
  exit 1
fi

#check the vault token
vault read consul/creds/vault
if [ $? -ne 0 ]
then
  fail-message "Error checking Consul vault acl token"
  exit 1
fi

#check operator creds
vault read consul/creds/operator
if [ $? -ne 0 ]
then
  fail-message "Error checking operator access"
  exit 1
fi

#check the Ca infra
if [ "$(curl -s ${CONSUL_HTTP_ADDR}/v1/connect/ca/roots | jq -r '.Roots[0].Name')" != "Vault CA Root Cert" ] && "$(curl -s ${CONSUL_HTTP_ADDR}/v1/connect/ca/roots | jq -r '.Roots[1].Name')" != "Vault CA Root Cert" ] ; then
  fail-message "Ca is not Vault"
  exit 1
fi

#check the gateway defaults - http & mgw local
if [ "$(consul config read -kind proxy-defaults -name global | jq -r '.Config.protocol')" != "http" ]; then
  fail-message "Default protocol is not http"
  exit 1
fi
if [ "$(consul config read -kind proxy-defaults -name global | jq -r '.MeshGateway.Mode')" != "local" ]; then
  fail-message "MGW mode is not local"
  exit 1
fi

#check the mgw is using the new token
vault login -method=userpass username=admin password=admin
export CONSUL_HTTP_TOKEN=$(vault kv get -field master_token kv/consul)
mgw_api=$(curl -v -s -H "X-Consul-Token: $(vault kv get -field master_token kv/consul)" $CONSUL_HTTP_ADDR/v1/health/service/mesh-gateway?passing=true)
if [ "$(echo "${mgw_api}" | jq '. | length')" != "1" ]; then
  fail-message "AWS MGW not healthy"
  exit 1
fi
exit 0
