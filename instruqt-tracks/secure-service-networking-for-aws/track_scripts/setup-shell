#!/bin/bash

#azure creds
sleep 30

#fix path
echo "export PATH=/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin" >> ~/.bashrc

# Youtils
apt update
apt install git curl jq gnupg2 vim ca-certificates -y

# Allow silent installs
export DEBIAN_FRONTEND=noninteractive

#Install NGinX
apt-key adv --keyserver keyserver.ubuntu.com --recv-keys ABF5BD827BD9BF62
apt-add-repository "deb [arch=amd64] https://nginx.org/packages/ubuntu/ $(lsb_release -cs) nginx"
apt-add-repository "deb-src [arch=amd64] deb-src https://nginx.org/packages/ubuntu/ $(lsb_release -cs) nginx"
apt update -y
apt install nginx -y


# Install gomplate
curl -o /usr/local/bin/gomplate -sSL https://github.com/hairyhenderson/gomplate/releases/download/v2.7.0/gomplate_linux-amd64 && \
  chmod +x /usr/local/bin/gomplate

git clone https://github.com/instruqt/docker-cloud-client
cd docker-cloud-client/
mv index.html.tmpl /var/www/html/
mv assets/ /var/www/html/
cd ..
rm -rf docker-cloud-client/
gomplate -f /var/www/html/index.html.tmpl -o /var/www/html/index.html
service nginx start

apt-key adv --fetch-keys https://packages.cloud.google.com/apt/doc/apt-key.gpg
apt update -y
apt install software-properties-common -y
apt-key adv --fetch-keys https://apt.releases.hashicorp.com/gpg
apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
apt-add-repository "deb https://apt.kubernetes.io/ kubernetes-xenial main"
apt update -y
apt-key adv --fetch-keys https://baltocdn.com/helm/signing.asc
apt-add-repository "deb https://baltocdn.com/helm/stable/debian/ all main"
apt update -y

apt install awscli kubectl helm terraform=1.1.5 consul=1.11.2 vault=1.7.1 -y

# So kubectl can talk to AWS EKS
curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/aws-iam-authenticator
chmod +x aws-iam-authenticator
mv ./aws-iam-authenticator /usr/bin

#make vault run in container
/sbin/setcap cap_ipc_lock= /usr/bin/vault

# Ensure we load /etc/profile.d/instruqt-env.sh
echo "source /etc/profile.d/instruqt-env.sh" >> /root/.bashrc
source /root/.bashrc

#get assets
echo "cloning assets..."
git clone https://github.com/hashicorp/field-workshops-consul.git
cp -r field-workshops-consul/instruqt-tracks/secure-service-networking-for-aws/assets/terraform /root/terraform
rm -rf field-workshops-consul

#ssh agent
cat << EOF > ~/.ssh/config
Host *
    StrictHostKeyChecking no
EOF
eval $(ssh-agent)
ssh-add ~/.ssh/id_rsa

exit 0