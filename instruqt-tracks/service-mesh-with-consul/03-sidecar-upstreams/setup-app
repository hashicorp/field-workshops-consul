#!/bin/sh

#Fix path
echo "Fixing our path..."
export PATH=/sbin:/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin

#Get Envoy for us
curl -L https://getenvoy.io/cli | bash -s -- -b /usr/local/bin
getenvoy run standard:1.11.1 -- --version
cp /root/.getenvoy/builds/standard/1.11.1/linux_glibc/bin/envoy /usr/local/bin/envoy
envoy --version

echo "Installing utilities..."
apt -y update
apt -y install unzip wget dnsutils
apt -y install netcat
apt -y install jq
echo "Installing consul..."
wget https://releases.hashicorp.com/consul/1.6.1/consul_1.6.1_linux_amd64.zip -O /tmp/consul.zip
cd /usr/local/bin
unzip /tmp/consul.zip
chmod +x /usr/local/bin/consul
mkdir -p /consul/config
mkdir -p /consul/data

cat <<-EOF > /consul/config/client.json
{
  "datacenter": "dc1",
  "bind_addr": "0.0.0.0",
  "client_addr": "0.0.0.0",
  "data_dir": "/consul/data",
  "log_level": "INFO",
  "node_name": "Application",
  "server": false,
  "ui": false,
  "leave_on_terminate": false,
  "skip_leave_on_interrupt": true,
  "rejoin_after_leave": true,
  "connect": {
    "enabled": true
  },
  "ports": {
    "grpc": 8502
  },
  "retry_join": [
    "consul-server-0:8301",
    "consul-server-1:8301",
    "consul-server-2:8301"
  ]
}
EOF

cat <<-EOF > /consul/config/application_service.json
{
  "service": {
    "name": "wordpress",
    "tags": [
      "wordpress",
      "production"
    ],
    "port": 80,
    "connect": {"sidecar_service": {} },
    "check": {
      "id": "wordpress",
      "name": "wordpress TCP on port 80",
      "tcp": "localhost:80",
      "interval": "10s",
      "timeout": "1s"
    }
  }
}
EOF

echo "Killing the currently running Consul agent..."
pkill consul

echo "Creating Consul startup script..."
cat <<-EOF > /bin/start_consul.sh
#!/bin/sh
echo "Starting HashiCorp Consul in client Mode..."
sleep 1
echo "CMD: nohup consul agent -config-dir=/consul/config > /consul.out &"
nohup /usr/local/bin/consul agent -config-dir=/consul/config > /consul.out &
echo "Log output will appear in consul.out..."
sleep 1
echo "Consul client startup complete."
EOF

chmod +x /bin/start_consul.sh
/bin/start_consul.sh

nohup consul connect envoy -sidecar-for wordpress -admin-bind=0.0.0.0:19000 > /envoy.out &

#hack this
consul reload

echo "Installing the WP-CLI tool..."
wget https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar -O /usr/local/bin/wp
chmod +x /usr/local/bin/wp

cat
echo "Configuring user and theme..."
sleep 10 # wait for DB server to be up
URL="https://app-80-${INSTRUQT_PARTICIPANT_ID}.env.play.instruqt.com"
/usr/local/bin/wp core install --url="$URL" --title="Consul Service Mesh" --admin_user=consul --admin_password=consul --admin_email=consul@example.com --skip-email --allow-root --path=/var/www/html
/usr/local/bin/wp theme activate twentyseventeen --allow-root --path=/var/www/html
/usr/local/bin/wp option update blogdescription "Dynamically secure any service or app on your network" --allow-root --path=/var/www/html
/usr/local/bin/wp post create --post_title='Consul Enterprise Features' --post_content='<ul><li><a href="https://consul.io/docs/enterprise/backups/index.html">Automated Backups</a></li><li><a href="https://consul.io/docs/enterprise/upgrades/index.html">Automated Upgrades</a></li><li><a href="https://consul.io/docs/enterprise/read-scale/index.html">Enhanced Read Scalability</a></li><li><a href="https://consul.io/docs/enterprise/redundancy/index.html">Redundancy Zones</a></li><li><a href="https://consul.io/docs/enterprise/federation/index.html">Advanced Federation for Complex NetworkTopologies</a></li><li><a href="https://consul.io/docs/enterprise/network-segments/index.html">Network Segments</a></li><li><a href="https://consul.io/docs/enterprise/sentinel/index.html">Sentinel</a></li></ul><p>These features are part of <a href="https://www.hashicorp.com/consul.html">Consul Enterprise</a>.</p>' --allow-root --path=/var/www/html --post_status=publish
/usr/local/bin/wp post create --post_title='Service Mesh Made Easy' --post_content='<img class="alignleft size-medium" src="https://www.consul.io/assets/images/og-image-6ef0ad8b.png" width="192" height="192" />One of the major use cases for Consul is Service Mesh. Consul provides a DNS interface that downstream services can use to find the IP addresses of their upstream dependencies.<p>Consul knows where these services are located because each service registers with its local Consul client. Operators can register services manually, configuration management tools can register services when they are deployed, or container orchestration platforms can register services automatically via integrations.' --allow-root --path=/var/www/html --post_status=publish
/usr/local/bin/wp comment create --comment_post_ID=5 --comment_content="Wow, best Service Mesh tool ever. üê±‚Äçüë§" --comment_author="A. Turing" --allow-root --path=/var/www/html
/usr/local/bin/wp comment create --comment_post_ID=5 --comment_content="ü§òüë©‚Äçüé§ Consul Rocks! We use it in all our datacenters and cloud environments and can find all our healthy services instantly." --comment_author="A. Lovelace" --allow-root --path=/var/www/html
/usr/local/bin/wp comment create --comment_post_ID=5 --comment_content="„Åì„Çå„ÅØ„ÄÅ„Çπ„Ç§„ÉÉ„ÉÅ„É≥„Ç∞ÂõûË∑Ø„ÅÆÁêÜË´ñ„Å´ÊúÄÈÅ©„Åß„Åô„ÄÇüï∏Ô∏è" --comment_author="‰∏≠Â≥∂" --allow-root --path=/var/www/html

cat <<-'EOF' >> /var/www/html/wp-config.php

// If we're behind a proxy server and using HTTPS, we need to alert WordPress of that fact
// see also http://codex.wordpress.org/Administration_Over_SSL#Using_a_Reverse_Proxy
define('FORCE_SSL_ADMIN', true);
// in some setups HTTP_X_FORWARDED_PROTO might contain
// a comma-separated list e.g. http,https
// so check for https existence
if (strpos($_SERVER['HTTP_X_FORWARDED_PROTO'], 'https') !== false)
$_SERVER['HTTPS']='on';
EOF

echo "Breaking the Wordpress connection..."
perl -p -i -e "s/'Database'/'10.94.99.99'/" /var/www/html/wp-config.php

echo "Making a backup of the Wordpress config file..."
cp /var/www/html/wp-config.php /tmp/wp-config.php.backup

exit 0
