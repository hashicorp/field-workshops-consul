#!/bin/bash

# This is the setup script for the workstation container. Use it to set the stage for your terraform training, demo, or lab.
set -e

#dirs
set-workdir /root/terraform/app
cd /root/terraform/app
terraform init

# Allow instruqt time to do its thing
sleep 10

#nginx
app_addr=$(terraform output -state /root/terraform/panw-vm/terraform.tfstate WebFQDN)
cat << EOF > /etc/nginx/conf.d/app.conf
server {
  listen 8080;
  location / {
    proxy_pass ${app_addr};
    proxy_set_header X-Real-IP \$remote_addr;
    proxy_redirect off;
    proxy_http_version 1.1;
    proxy_set_header Upgrade \$http_upgrade;
    proxy_set_header Connection "Upgrade";
  }
  access_log /var/log/nginx/app.log;
}
EOF
/usr/sbin/service nginx reload

#tf vars
consul_server_ip=$(terraform output -state=/root/terraform/consul-server/terraform.tfstate consul_server_ip)
consul_lb=$(terraform output -state=/root/terraform/consul-server/terraform.tfstate consul_external_ip)
echo "export CONSUL_HTTP_ADDR=${consul_lb}" >> ~/.bashrc
bigip_mgmt_addr=$(terraform output -state=/root/terraform/bigip/terraform.tfstate mgmt_ip)
vip_internal_address=$(terraform output -state=/root/terraform/bigip/terraform.tfstate vip_internal_address)
cat << EOF > /root/terraform/app/terraform.tfvars
ssh_public_key = "$(cat ~/.ssh/id_rsa.pub)"
bigip_mgmt_addr = "${bigip_mgmt_addr}"
vip_internal_address = "${vip_internal_address}"
consul_server_ip = "${consul_server_ip}"
EOF


exit 0
