#!/bin/bash

#creds
vault login -method=userpass username=admin password=admin

#check the esm token
vault read consul/creds/aws-tgw
if [ $? -ne 0 ]
then
  fail-message "Error checking Consul AWS TGW acl token"
  exit 1
fi

#check the esm token
vault read consul/creds/azure-tgw
if [ $? -ne 0 ]
then
  fail-message "Error checking Consul Azure TGW acl token"
  exit 1
fi

#aws
aws_tgw=$(curl -s -H "X-Consul-Token: $(vault kv get -field master_token kv/consul)" "${CONSUL_HTTP_ADDR}/v1/health/service/aws-us-east-1-terminating-gateway?dc=aws-us-east-1&passing=true")
if [ "$(echo "${aws_tgw}" | jq '. | length')" != "1" ]; then
  fail-message "AWS TGW is not healthy"
  exit 1
fi

#azure
azure_tgw=$(curl -s -H "X-Consul-Token: $(vault kv get -field master_token kv/consul)" "${CONSUL_HTTP_ADDR}/v1/health/service/azure-west-us-2-terminating-gateway?dc=azure-west-us-2&passing=true")
if [ "$(echo "${azure_tgw}" | jq '. | length')" != "1" ]; then
  fail-message "Azure TGW is not healthy"
  exit 1
fi

#cts
cts_sg=$(aws ec2 describe-security-groups --filter Name="group-id",Values="$(terraform output -state /root/terraform/cache-services/terraform.tfstate elasticache_sg)" | jq '.SecurityGroups[0].IpPermissions[0].IpRanges | length')
if [ "${cts_sg}" != "2" ]; then
  fail-message "CTS did not work. Expecting 2 SG rules."
  exit 1
fi

exit 0
