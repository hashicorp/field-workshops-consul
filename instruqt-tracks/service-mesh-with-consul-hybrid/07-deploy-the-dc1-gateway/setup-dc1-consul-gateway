#!/bin/bash

#Get enovy for us
curl -L https://getenvoy.io/cli | bash -s -- -b /usr/local/bin
getenvoy run standard:1.14.1 -- --version
cp /root/.getenvoy/builds/standard/1.14.1/linux_glibc/bin/envoy /usr/local/bin/envoy
envoy --version

#ip
local_ipv4=$(curl -s -H "Metadata-Flavor: Google" http://metadata/computeMetadata/v1/instance/network-interfaces/0/ip)

#nmap for debug
apt update -y
apt install -y nmap

#consul
service consul stop
mkdir -p /consul/data

cat <<-EOF > /etc/consul.d/client.json
{
  "datacenter": "dc1",
  "server": false,
  "bind_addr": "${local_ipv4}",
  "client_addr": "0.0.0.0",
  "data_dir": "/consul/data",
  "log_level": "INFO",
  "node_name": "Gateway",
  "ui": true,
  "connect": {
    "enabled": true
  },
  "enable_central_service_config": true,
  "ports": {
    "grpc": 8502
  },
  "retry_join": [
    "dc1-consul-server:8301"
  ]
}
EOF

service consul start

#calico
ETCD_ENDPOINTS=http://dc1-kubernetes:2379
ETCD_CA_CERT_FILE=""
ETCD_CERT_FILE=""
ETCD_KEY_FILE=""
CALICO_NODENAME="gateway"
CALICO_NO_DEFAULT_POOLS=""
CALICO_IP=""
CALICO_IP6=""
CALICO_AS=""
CALICO_NETWORKING_BACKEND=bird

cat <<-EOF > /etc/systemd/system/calico-node.service
[Unit]
Description=calico-node
After=docker.service
Requires=docker.service

[Service]
ExecStartPre=-/usr/bin/docker rm -f calico-node
ExecStart=/usr/bin/docker run --net=host --privileged \
 --name=calico-node \
 -e NODENAME=${CALICO_NODENAME} \
 -e IP=${CALICO_IP} \
 -e IP6=${CALICO_IP6} \
 -e CALICO_NETWORKING_BACKEND=${CALICO_NETWORKING_BACKEND} \
 -e AS=${CALICO_AS} \
 -e NO_DEFAULT_POOLS=${CALICO_NO_DEFAULT_POOLS} \
 -e ETCD_ENDPOINTS=${ETCD_ENDPOINTS} \
 -e ETCD_CA_CERT_FILE=${ETCD_CA_CERT_FILE} \
 -e ETCD_CERT_FILE=${ETCD_CERT_FILE} \
 -e ETCD_KEY_FILE=${ETCD_KEY_FILE} \
 -v /var/log/calico:/var/log/calico \
 -v /run/docker/plugins:/run/docker/plugins \
 -v /lib/modules:/lib/modules \
 -v /var/run/calico:/var/run/calico \
 calico/node:v3.10.0

ExecStop=-/usr/bin/docker stop calico-node

Restart=always
RestartSec=10

[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reload
systemctl enable calico-node.service
systemctl start calico-node.service

exit 0
